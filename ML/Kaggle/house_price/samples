vv=df.select_dtypes(include = ['object'])
num = df.select_dtypes(exclude = ['object'])

---Histogram
nandf = df[df['LotFrontage'].notnull()]
nandf['YearBuilt'].hist(bins = 80)
plt.show()

vv=nandf.pivot_table(values = 'LotFrontage', index = ['YearBuilt'], aggfunc = np.size)
ii = vv[vv.index < 1990]
vv = ii[ii.index > 1932]

pvt = validdf.pivot_table(values = 'LotFrontage', index = catclass, aggfunc = [np.std, np.mean, np.size, np.min, np.max])
pvt['RelStd', 'LotFrontage'] = (pvt['std','LotFrontage'] / pvt['mean','LotFrontage']) * 100
pvt=pvt[pvt.notnull().all(1)]
s = [tuple(x) for x in nandf[catclass].values]
yy = pvt.loc[s]
yy.index = nandf.index

#copydf[df.select_dtypes(['float64']).columns] = df[df.select_dtypes(['float64']).columns]
#copydf.corr()

mm = df.copy()
mm = mm.assign(BBin = lambda x : pd.qcut(x.LotArea, 10, labels = [str(i) for i in range(10)]))
mm.BBin = mm.BBin.astype('int')
#mm.plot.scatter(x = 'BBin', y = 'LotArea' )
#plt.show()

mm = mm.loc[mm.SalePrice != 0]
#mm = mm.loc[mm.BBin == 9]
#mm = mm.groupby(['Neighborhood']).agg({'SalePrice' : 'median', 'BBin' : 'size', 'LotArea' : 'median'})
#tt=mm.sort_values(by = 'SalePrice', axis = 0)
#tt.index.lables
#mm['BBin'].hist()
#plt.show()

def sorted_columns(df, what, bby):
    t_df = df.loc[df[bby] != 0]
    t_df = t_df.groupby([what]).agg({bby : 'median'})
    t_df = t_df.sort_values(by = bby, axis = 0 )
    return t_df.index.values


sorted_columns(mm, 'Neighborhood', 'SalePrice')

mm.groupby(['BBin']).SalePrice.median()
mm['BBin'].hist()
plt.show()
